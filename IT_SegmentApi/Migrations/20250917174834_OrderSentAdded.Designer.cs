// <auto-generated />
using System;
using IT_SegmentApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace IT_SegmentApi.Migrations
{
    [DbContext(typeof(IOTFinalDbContext))]
    [Migration("20250917174834_OrderSentAdded")]
    partial class OrderSentAdded
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IT_SegmentApi.Models.Customer", b =>
                {
                    b.Property<int>("CustomerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CustomerId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HashPassword")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Postcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CustomerId");

                    b.ToTable("Customers", (string)null);
                });

            modelBuilder.Entity("IT_SegmentApi.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"));

                    b.Property<int>("CustomerId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("OrderSent")
                        .HasColumnType("bit");

                    b.Property<string>("OrderStatus")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Paid")
                        .HasColumnType("bit");

                    b.Property<bool>("Shipment")
                        .HasColumnType("bit");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("OrderId");

                    b.HasIndex("CustomerId");

                    b.ToTable("Orders", (string)null);
                });

            modelBuilder.Entity("IT_SegmentApi.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"));

                    b.Property<decimal>("ItemPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("OrderId");

                    b.HasIndex("ProductId");

                    b.ToTable("OrderItems", (string)null);
                });

            modelBuilder.Entity("IT_SegmentApi.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.ToTable("Products", (string)null);

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            Description = "Chocolate Bar",
                            Name = "Marabou MjölkChoklad",
                            Price = 29.99m,
                            Stock = 320
                        },
                        new
                        {
                            ProductId = 2,
                            Description = "Chocolate Bar",
                            Name = "Marabou Schweizernöt",
                            Price = 29.99m,
                            Stock = 200
                        },
                        new
                        {
                            ProductId = 3,
                            Description = "Chocolate Bar",
                            Name = "Marabou Apelsinkrokant",
                            Price = 27.99m,
                            Stock = 160
                        },
                        new
                        {
                            ProductId = 4,
                            Description = "Chocolate Bar",
                            Name = "Marabou Mintkrokant",
                            Price = 31.99m,
                            Stock = 88
                        },
                        new
                        {
                            ProductId = 5,
                            Description = "Chocolate Bar",
                            Name = "Marabou Frukt & Mandel",
                            Price = 34.99m,
                            Stock = 206
                        },
                        new
                        {
                            ProductId = 6,
                            Description = "Chocolate Bar",
                            Name = "Marabou Helnöt",
                            Price = 29.99m,
                            Stock = 185
                        },
                        new
                        {
                            ProductId = 7,
                            Description = "Chocolate Bar",
                            Name = "Marabou Salta Mandlar",
                            Price = 36.99m,
                            Stock = 200
                        },
                        new
                        {
                            ProductId = 8,
                            Description = "Chocolate Bar",
                            Name = "Marabou Jordgubb",
                            Price = 27.99m,
                            Stock = 107
                        },
                        new
                        {
                            ProductId = 9,
                            Description = "Chocolate Bar",
                            Name = "Marabou Gräddnougat",
                            Price = 32.99m,
                            Stock = 60
                        },
                        new
                        {
                            ProductId = 10,
                            Description = "Chocolate Bar",
                            Name = "Marabou Fudge & Havssalt",
                            Price = 36.99m,
                            Stock = 145
                        });
                });

            modelBuilder.Entity("IT_SegmentApi.Models.Order", b =>
                {
                    b.HasOne("IT_SegmentApi.Models.Customer", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("IT_SegmentApi.Models.OrderItem", b =>
                {
                    b.HasOne("IT_SegmentApi.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("IT_SegmentApi.Models.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("IT_SegmentApi.Models.Order", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
